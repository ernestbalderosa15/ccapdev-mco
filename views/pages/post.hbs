{{!-- pages/post.hbs --}}

<article class="post full-post" data-post-id="{{post._id}}" data-user-logged-in="{{#if user}}true{{else}}false{{/if}}">
    <div class="back-link">
        <a href="/" class="btn-icon"><span class="material-icons">arrow_back</span> Back</a>
    </div>
    <div class="post full-post">
        <div class="post-header">
            <div class="post-user">
<img src="{{#if post.user.profilePictureUrl}}{{post.user.profilePictureUrl}}{{else}}{{#if post.user.profilePicture}}{{post.user.profilePicture}}{{else}}/images/default-avatar.jpg{{/if}}{{/if}}" alt="{{post.user.username}}" class="avatar small" onerror="handleImageError(this)">
                <span class="username">{{post.user.username}}</span>
                <span class="time">{{formatDate post.createdAt}}</span>
            </div>
    <div class="post-actions">
        <button class="post-menu"><span class="material-icons">more_vert</span></button>
            <div class="post-menu-content">
                {{#if isAuthor}}
                    <a href="/edit-post/{{post._id}}" class="edit-post">Edit</a>
                    <a href="#" class="delete-post" data-post-id="{{post._id}}">Delete</a>
                {{/if}}
                    <a href="#" class="share-post" data-post-id="{{post._id}}">Share</a>
            </div>
        </div>
    </div>
        <h2 class="post-title">{{post.title}}</h2>
        {{#if post.image}}
    <img src="{{post.image}}" alt="Post image" class="post-image" onerror="this.style.display='none'">
        {{/if}}
    <div class="post-content">
        {{{post.content}}}
    </div>
<div class="post-tags">{{#each post.tags}}
    <a href="/search?tag={{this}}" class="tag">{{this}}</a>
    {{/each}}
</div>
<div class="post-stats">
    <div class="post-stats-left">
        <button class="btn-icon upvote-btn {{#if (eq post.userVote 'upvote')}}active{{/if}}" data-post-id="{{post._id}}">
            <span class="material-icons">arrow_upward</span> 
            <span class="upvote-count">{{post.upvotes.length}}</span>
        </button>
        <button class="btn-icon downvote-btn {{#if (eq post.userVote 'downvote')}}active{{/if}}" data-post-id="{{post._id}}">
            <span class="material-icons">arrow_downward</span>
        </button>
        <button class="btn-icon">
            <span class="material-icons">comment</span> 
            {{post.comments.length}}
        </button>
    </div>
    <div class="post-stats-right">
        <button class="bookmark-btn" data-post-id="{{post._id}}">
    <span class="material-icons">{{#if post.isBookmarked}}bookmark{{else}}bookmark_border{{/if}}</span>
</button>

        <button class="btn-icon share-btn" data-post-id="{{post._id}}">
            <span class="material-icons">share</span>
        </button>
    </div>
</div>

    <div class="comments-section">
        <h3>Comments</h3>
        <div class="comment-form-container">
            <textarea placeholder="Write a comment..." class="comment-input"></textarea>
            <button type="submit" class="btn-icon btn-add-comment" data-post-id="{{post._id}}">
                <span class="material-icons">add</span>
            </button>
        </div>

        <div class="comments-list">
            {{#each post.comments}}
                {{> commentbody}}
            {{/each}}
        </div>
    </div>
</div>
</article>

<script>
window.handleImageError = function(img) {
    img.onerror = null; // Prevent infinite loop
    img.src = '/images/default-avatar.jpg';
    console.log('Fallback image set for profile picture');
}

document.addEventListener('DOMContentLoaded', function() {
    const deleteButton = document.querySelector('.delete-post');
    if (deleteButton) {
        deleteButton.addEventListener('click', function(e) {
            e.preventDefault();
            const postId = this.getAttribute('data-post-id');
            
            if (confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
                fetch(`/delete-post/${postId}`, {
                    method: 'DELETE',
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Post deleted successfully!');
                        window.location.href = '/'; // Redirect to homepage
                    } else {
                        throw new Error(data.error || 'Failed to delete post');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the post: ' + error.message);
                });
            }
        });
    }
});

function handleImageError(img) {
    img.onerror = null; // Prevent infinite loop
    img.src = '/images/default-avatar.jpg';
    console.log('Fallback image set for profile picture');
}

document.addEventListener('DOMContentLoaded', function() {
    // Handle post image error
    const postImage = document.querySelector('.post-image');
    if (postImage) {
        postImage.onerror = function() {
            console.log('Failed to load post image');
            this.style.display = 'none';
        };
    }
});


</script>